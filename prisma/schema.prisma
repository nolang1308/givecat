generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  nickname  String
  password  String
  isUpgraded Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  attempts CodeAttempt[]
  @@map("users")
}

model DailyCode {
  id        String   @id @default(cuid())
  date      String   @unique // YYYY-MM-DD format
  code      String   // 10자리 코드
  productName String
  productImage String
  createdAt DateTime @default(now())
  
  attempts CodeAttempt[]
  @@map("daily_codes")
}

model CodeAttempt {
  id        String   @id @default(cuid())
  userId    String
  codeId    String
  success   Boolean  @default(false)
  attemptedAt DateTime @default(now())
  
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  code      DailyCode @relation(fields: [codeId], references: [id], onDelete: Cascade)
  
  @@unique([userId, codeId])
  @@map("code_attempts")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  imageUrl    String
  category    String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("products")
}

model DailyProductList {
  id        String   @id @default(cuid())
  date      String   @unique // YYYY-MM-DD format
  productIds String[] // 상품 ID 배열 (전체 목록용)
  todayProductId String // 오늘의 상품 ID (1개)
  createdAt DateTime @default(now())
  
  @@map("daily_product_lists")
}